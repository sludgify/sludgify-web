import type { Metadata } from "next";
import { Toaster } from "@/components/ui/sonner";
import ReactQueryProvider from "@/lib/provider";
import { GoogleOAuthProvider } from "@react-oauth/google";
import { Geist, Geist_Mono, Radley } from "next/font/google";
import "./globals.css";
// app/fonts.ts
import localFont from "next/font/local";

export const calibri = localFont({
    src: [
        {
            path: "../public/fonts/calibri.ttf",
            weight: "400",
            style: "normal",
        },
        {
            path: "../public/fonts/calibrib.ttf",
            weight: "700",
            style: "normal",
        },
        {
            path: "../public/fonts/calibrii.ttf",
            weight: "400",
            style: "italic",
        },
        {
            path: "../public/fonts/calibriz.ttf",
            weight: "700",
            style: "italic",
        },
    ],
    variable: "--font-calibri",
    display: "swap",
});

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const radley = Radley({
    variable: "--font-radley",
    subsets: ["latin"],
    weight: "400",
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Sludgify",
    description: "Generated by create next app",
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
        <html lang="en">
            <body suppressHydrationWarning={true} className={`${geistSans.variable} ${geistMono.variable} ${calibri.variable} ${radley.variable} antialiased`}>
                <GoogleOAuthProvider clientId="113118193592-loc110rrqru2gmg3ahr94771n1c7hp8j.apps.googleusercontent.com">
                    <ReactQueryProvider>
                        {children}
                        <Toaster />
                    </ReactQueryProvider>
                </GoogleOAuthProvider>
            </body>
        </html>
    );
}
